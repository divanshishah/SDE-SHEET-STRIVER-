//***********BEtter Aprroach***********//
/**********(reduces time complexity to n^2)********//
class Solution {
    public void setZeroes(int[][] matrix) {
        int n=matrix.length;
        int m=matrix[0].length;
        boolean []ci=new boolean[n];
        boolean []cj=new boolean[m];
        for(int r=0;r<n;r++)
        {
            for(int c=0;c<m;c++)
            {
                if(matrix[r][c]==0)
                {
                    ci[r]=true;
                    cj[c]=true;
                }
                
            }
        }
        for(int i=0;i<n;i++)
        {
            if(ci[i]==true){
            for(int j=0;j<m;j++)
            {
                matrix[i][j]=0;
            }
            }
        }
        for(int i=0;i<m;i++)
        {
            if(cj[i]==true){
                for(int j=0;j<n;j++)
                {
                    matrix[j][i]=0;
                }
            }
        }
        
    }
}

//*************Optimal Solution*****************//
/**********(optimizes the space complexity)*******//

class Solution {
    public void setZeroes(int[][] matrix) {
        int n=matrix.length;
        int m=matrix[0].length;
        int col0=1;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(matrix[i][j]==0){
                //mark the ith row
                matrix[i][0]=0;
                //mark the jth column
                if(j!=0)
                matrix[0][j]=0;
                else
                col0=0;
                }
            }
        }
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                if(matrix[i][j]!=0){
                    //check for column & row
                    if(matrix[0][j]==0 || matrix[i][0]==0){
                        matrix[i][j]=0;
                    }
                }
            }
        }
        if(matrix[0][0]==0){
            for(int j=0;j<m;j++)
            matrix[0][j]=0;
        }
        if(col0==0){
            for(int i=0;i<n;i++)
            matrix[i][0]=0;
        }
    }
}
